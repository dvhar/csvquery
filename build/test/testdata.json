[
{
	"title":"Basic top 10",
	"code":0,
	"query":"select top 10 from 'test/country.csv' nh",
	"output":"1.csv"
},
{
	"title":"With int and arithmetic",
	"code":0,
	"query":"with c7 as int select top 10 int, c9, int+c9, int+c1, int+c7 c1+c2 as ss, c1+c9 as sf, c1+c7 as si, c7+c9 as if, int+-c5 as ii, int-c5 as ii2 c16, c16+'10 years', c16-'10 years', '10 years'*-2 from 'test/country.csv' nh",
	"output":"2.csv"
},
{
	"title":"distinct string, case",
	"code":0,
	"query":"select distinct c3 c15 case when c15 like '_F' or c15 like '%O' then 1 when c15 like '_i' then 2 else 0 end from 'test/country.csv' nh",
	"output":"3.csv"
},
{
	"title":"distinct var",
	"code":0,
	"query":"with c5 as int select top 10 distinct int, int from 'test/country.csv' nh",
	"output":"4.csv"
},
{
	"title":"distinct hidden",
	"code":0,
	"query":"with c5 as int select top 10 distinct hidden int, int from 'test/country.csv' nh",
	"output":"5.csv"
},
{
	"title":"basic where",
	"code":0,
	"query":"select top 10 c5 c7 c16 from 'test/country.csv' nh where c5%2=0 and c7<200000 and c16 between '1/1/2020' and '1/1/2040'",
	"output":"6.csv"
},
{
	"title":"where in",
	"code":0,
	"query":"select top 10 c1 from 'test/country.csv' nh where c1 in (FRA, FRO, FSM, GAB, GBR, GEO, GHA, GIB, GIN)",
	"output":"7.csv"
},
{
	"title":"where not in",
	"code":0,
	"query":"select top 10 c1 from 'test/country.csv' nh where c1 not in (AFG, AGO, AIA, ALB, 'AND', ANT, ARE, ARG, ARM, ASM)",
	"output":"8.csv"
},
{
	"title":"order by int",
	"code":0,
	"query":"select top 10 c7 from 'test/country.csv' nh order by c7",
	"output":"9.csv"
},
{
	"title":"order by float asc",
	"code":0,
	"query":"select top 10 c9 from 'test/country.csv' nh order by c9 asc where c9 <> 0",
	"output":"10.csv"
},
{
	"title":"order by date",
	"code":0,
	"query":"select top 10 c16 from 'test/country.csv' nh order by c16",
	"output":"11.csv"
},
{
	"title":"order by string",
	"code":0,
	"query":"select top 10 c1 from 'test/country.csv' nh order by c1",
	"output":"12.csv"
},
{
	"title":"order by variable",
	"code":0,
	"query":"with c1 + dog as ord select top 10 ord from 'test/country.csv' nh order by ord",
	"output":"13.csv"
},
{
	"title":"order by variable asc",
	"code":0,
	"query":"with c1 + dog as ord select top 10 ord from 'test/country.csv' nh order by ord asc",
	"output":"14.csv"
},
{
	"title":"operations on counts",
	"code":0,
	"query":"select count(*) /  count(c13) * 2 c4 from 'test/country.csv' nh",
	"output":"15.csv"
},
{
	"title":"count with 1 level groups",
	"code":0,
	"query":"select count(*) c3 from 'test/country.csv' nh group by c3",
	"output":"16.csv"
},
{
	"title":"count with nested groups",
	"code":0,
	"query":"select count(*) c3 c4 from 'test/country.csv' nh group by c3 c4",
	"output":"17.csv"
},
{
	"title":"aggregate variable",
	"code":0,
	"query":"with avg(c7) * 2 as dog select avg(c7) dog c7 sum(c7)/91 from 'test/country' nh",
	"output":"18.csv"
},
{
	"title":"non-agg phase2 variable",
	"code":0,
	"query":"with avg(c7) * 2 as dog and c3 as 'group' select avg(c7) dog c7 c1 sum(c7)/91 'group' from 'test/country' nh group by c3",
	"output":"19.csv"
},
{
	"title":"having agg condition",
	"code":0,
	"query":"select avg(c9) c3 from 'test/country' nh group by c3 having avg(c9) <= 10000",
	"output":"20.csv"
},
{
	"title":"having agg condition with var",
	"code":0,
	"query":"with avg(c9) as a select a c3 from 'test/country' nh group by c3 having a <= 10000",
	"output":"20.csv"
},
{
	"title":"double group sort with var",
	"code":0,
	"query":"with max(c1) as m1 select max(c3) m1 from 'test/country' nh group by inc() order by max(c3) m1 asc",
	"output":"21.csv"
},
{
	"title":"triple group sort with just vars",
	"code":0,
	"query":"with max(c1) as m1, max(c3) as m3, max(c4) as m4 select m3 m4 m1 from 'test/country' nh group by inc() % 20 order by m3 m4 asc m1",
	"output":"22.csv"
},
{
	"title":"triple plain sort with var",
	"code":0,
	"query":"with c7%10000 as v7 select c3 v7 c9 from 'test/country' nh order by c3 v7 c9",
	"output":"23.csv"
},
{
	"title":"count distinct with groups",
	"code":0,
	"query":"select count(distinct c2) c3 from 'test/cities' group by c3 order by max(c3) asc",
	"output":"24.csv"
},
{
	"title":"single basic join",
	"code":0,
	"query":"select t.c3,o.c1,t.c2 from 'test/cities.csv' nh t join 'test/country.csv' o nh on t.c3=o.c1 limit 10",
	"output":"25.csv"
},
{
	"title":"single basic join with vars for where, distinct, joinvals, and selections",
	"code":0,
	"query":"with t.c3 as v1, o.c1 as v2, t.c2 as dog, o.c2 as cat select distinct v1,v2,dog,cat from 'test/country' o nh join 'test/cities' nh t on v1=v2 where dog like 'm%'",
	"output":"26.csv"
},
{
	"title":"single basic left join with var",
	"code":0,
	"query":"with t.c3 as v1 select v1,o.c1,t.c2 from 'test/cities.csv' nh t left join 'test/country.csv' o nh on v1=o.c1 limit 10",
	"output":"27.csv"
}
]
