[{"/home/d/gits/csvquery/webgui/src/index.js":"1","/home/d/gits/csvquery/webgui/src/command.js":"2","/home/d/gits/csvquery/webgui/src/utils.js":"3","/home/d/gits/csvquery/webgui/src/display.js":"4","/home/d/gits/csvquery/webgui/src/topbar.js":"5","/home/d/gits/csvquery/webgui/src/help.js":"6","/home/d/gits/csvquery/webgui/src/serviceWorker.js":"7"},{"size":7022,"mtime":1612790613210,"results":"8","hashOfConfig":"9"},{"size":1560,"mtime":1612790613210,"results":"10","hashOfConfig":"9"},{"size":3493,"mtime":1612790613210,"results":"11","hashOfConfig":"9"},{"size":7526,"mtime":1612790613210,"results":"12","hashOfConfig":"9"},{"size":8116,"mtime":1615643671039,"results":"13","hashOfConfig":"9"},{"size":19698,"mtime":1615644203003,"results":"14","hashOfConfig":"9"},{"size":4948,"mtime":1612790613210,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"1ou30oy",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"19"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"19"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/d/gits/csvquery/webgui/src/index.js",["34","35","36"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './style.css';\nimport {postRequest,getRequest,bit} from './utils.js';\nimport * as command from './command.js';\nimport * as display from './display.js';\nimport * as help from './help.js';\nimport * as topbar from './topbar.js';\nimport * as serviceWorker from './serviceWorker';\n//import testdata from './testdata.json';\n\n\nclass Main extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\ttopMessage : \"\",\n\t\t\ttopDropdown : \"nothing\",\n\t\t\topenDirList : {},\n\t\t\tsaveDirList : {},\n\t\t\tqueryHistory: ['',],\n\t\t\thistoryPosition : 0,\n\t\t\tshowQuery : <></>,\n\t\t\tshowHelp : 0,\n\t\t\tnotifyUpdate : true,\n\t\t\tconfigpath : \"\",\n\t\t\tversion : \"\",\n\t\t\tsessionId : \"\",\n\t\t\tlastpass : \"\",\n\t\t}\n\t\tthis.topDropReset = this.topDropReset.bind(this);\n\n\t\t//restore previous session or initialize paths\n\t\tgetRequest({info:\"getState\"})\n\t\t\t.then(dat=>{\n\t\t\t\tif (dat.history) this.setState({ queryHistory : dat.history, historyPosition : dat.history.length-1 });\n\t\t\t\tif (dat.openDirList) this.setState({ openDirList : dat.openDirList });\n\t\t\t\tif (dat.saveDirList) this.setState({ saveDirList : dat.saveDirList });\n\t\t\t\tif (dat.version) this.setState({ version : dat.version });\n\t\t\t\tif ('notifyUpdate' in dat) this.setState({ notifyUpdate : dat.notifyUpdate });\n\t\t\t\tif (dat.configpath) this.setState({ configpath : dat.configpath });\n\t\t\t\tvar textbox = document.getElementById(\"textBoxId\");\n\t\t\t\tif (textbox != null)\n\t\t\t\t\ttextbox.value = this.state.queryHistory[this.state.historyPosition].query || \"\";\n\t\t\t});\n\t}\n\tshowLoadedQuery(results){\n\t\tif (results.status & bit.DAT_ERROR){\n\t\t\tif (results.message === undefined || results.message === \"\"){\n\t\t\t\talert(\"Could not make query or get error message from query engine\");\n\t\t\t\tconsole.log(results);\n\t\t\t}else\n\t\t\t\talert(results.message);\n\t\t}\n\t\telse if (results.status & bit.DAT_GOOD){\n\t\t\tthis.setState({\n\t\t\t\ttopDropdown : \"nothing\",\n\t\t\t\tshowQuery : results.entries.map(\n\t\t\t\t\ttab => <display.QueryRender \n\t\t\t\t\t\t\t   table = {tab} \n\t\t\t\t\t\t\t   hideColumns = {new Int8Array(tab.numcols)}\n\t\t\t\t\t\t\t   rows = {new Object({col:\"\",val:\"*\"})}\n\t\t\t\t\t\t   />) });\n\t\t\tpostRequest({path:\"/info?info=setState\",body:{\n\t\t\t\thaveInfo : true,\n\t\t\t\tcurrentQuery : document.getElementById(\"textBoxId\").value,\n\t\t\t\thistory : this.state.queryHistory,\n\t\t\t\topenDirList : this.state.openDirList,\n\t\t\t\tsaveDirList : this.state.saveDirList,\n\t\t\t}});\n\t\t}\n\t}\n\n\tsubmitQuery(querySpecs){\n\t\tvar fullQuery = {\n\t\t\tsessionId: this.state.sessionId || \"\",\n\t\t\tquery: querySpecs.query || \"\", \n\t\t\tfileIO: querySpecs.fileIO || 0, \n\t\t\tsavePath: querySpecs.savePath || \"\", \n\t\t\t};\n\t\tpostRequest({path:\"/query/\",body:fullQuery}).then(dat=>{\n\t\t\tif ((dat.status & bit.DAT_GOOD) && (!querySpecs.backtrack)){\n\t\t\t\tthis.setState({ historyPosition : this.state.queryHistory.length,\n\t\t\t\t\t\t\t\tqueryHistory : this.state.queryHistory.concat({query : dat.originalQuery}) });\n\t\t\t}\n\t\t\tthis.showLoadedQuery(dat);\n\t\t});\n\t}\n\tsendSocket(request){\n\t\tthis.ws.send(JSON.stringify(request));\n\t}\n\n\tviewHistory(position){\n\t\tthis.setState({ historyPosition : position });\n\t\tvar textbox = document.getElementById(\"textBoxId\");\n\t\tif (textbox != null) { textbox.value = this.state.queryHistory[position].query; }\n\t}\n\ttopDropReset(e){ \n\t\tsetTimeout(()=>{\n\t\t\tif (!e.target.matches('.dropContent'))\n\t\t\t\tthis.setState({ topDropdown : \"nothing\" }); \n\t\t\tif (this.state.showHelp && !e.target.matches('.helpDrop'))\n\t\t\t\tthis.setState({ showHelp : false }); \n\t\t},50);\n\t}\n\tchangeFilePath(whichPath){\n\t\tif (whichPath.type === \"open\")\n\t\t\tthis.state.openDirList.path = whichPath.path;\n\t\tif (whichPath.type === \"save\")\n\t\t\tthis.state.saveDirList.path = whichPath.path;\n\t\tthis.forceUpdate();\n\t}\n\n\tfileClick(request){\n\t\tpostRequest({path:\"/info?info=fileClick\",body:{\n\t\t\tpath : request.path,\n\t\t\tmode : request.mode,\n\t\t\tsessionId: this.state.sessionId,\n\t\t}}).then(dat=>{if (dat.mode) {\n\t\t\tswitch (dat.mode){\n\t\t\tcase \"open\":\n\t\t\t\tthis.setState({openDirList: dat});\n\t\t\t\tbreak;\n\t\t\tcase \"save\":\n\t\t\t\tthis.setState({saveDirList: dat});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.setState({topMessage: (dat.error ? dat.error : \"error\")});\n\t\t}});\n\t}\n\n\trender(){\n\t\n\t\tdocument.addEventListener('click',this.topDropReset);\n\n\t\treturn (\n\t\t<>\n\t\t<topbar.TopMenuBar\n\t\t\ts = {this.state}\n\t\t\tupdateTopMessage = {(message)=>this.setState({ topMessage : message })}\n\t\t\tsubmitQuery = {(query)=>this.submitQuery(query)}\n\t\t\tviewHistory = {(position)=>this.viewHistory(position)}\n\t\t\tchangeTopDrop = {(section)=>this.setState({ topDropdown : section })}\n\t\t\ttoggleHelp = {()=>{this.setState({showHelp:this.state.showHelp^1})}}\n\t\t\tshowHelp = {this.state.showHelp}\n\t\t\topenDirList = {this.state.openDirList}\n\t\t\tsaveDirList = {this.state.saveDirList}\n\t\t\tchangeFilePath = {(path)=>this.changeFilePath(path)}\n\t\t\tsendSocket = {(request)=>this.sendSocket(request)}\n\t\t\tfileClick = {(request)=>this.fileClick(request)}\n\t\t/>\n\t\t<help.Help\n\t\t\tversion = {this.state.version}\n\t\t\tshow = {this.state.showHelp}\n\t\t\tnotifyUpdate = {this.state.notifyUpdate}\n\t\t\tconfigpath = {this.state.configpath}\n\t\t\ttoggleHelp = {()=>{this.setState({showHelp:this.state.showHelp^1})}}\n\t\t/>\n\n\t\t<div className=\"querySelect\"> \n\t\t<command.QueryBox\n\t\t\ts = {this.state}\n\t\t\tshowLoadedQuery = {(results)=>this.showLoadedQuery(results)}\n\t\t\tsubmitQuery = {(query)=>this.submitQuery(query)}\n\t\t\tsendSocket = {(request)=>this.sendSocket(request)}\n\t\t/>\n\t\t{this.state.showQuery}\n\t\t</div>\n\t\t</>\n\t\t)\n\t}\n\n\tcomponentDidMount(){\n\t\t//websocket\n\t\tvar bugtimer = window.performance.now() + 30000\n\t\tvar that = this;\n\t\tthis.ws = new WebSocket(\"ws://localhost:8061/socket/\");\n\t\tconsole.log(this.ws);\n\t\tthis.ws.onopen = function(e) { console.log(\"OPEN\"); }\n\t\tthis.ws.onclose = function(e) { console.log(\"CLOSE\"); that.ws = null; } \n\t\tthis.ws.onmessage = function(e) { \n\t\t\tconsole.log(e.data);\n\t\t\tvar dat = JSON.parse(e.data);\n\t\t\tswitch (dat.type) {\n\t\t\tcase bit.SK_PING:\n\t\t\t\tbugtimer = window.performance.now() + 20000\n\t\t\t\tbreak;\n\t\t\tcase bit.SK_MSG:\n\t\t\t\tthat.setState({ topMessage : dat.text }); \n\t\t\t\tbreak;\n\t\t\tcase bit.SK_PASS:\n\t\t\t\tif (that.state.lastpass){\n\t\t\t\t\tthat.sendSocket({type: bit.SK_PASS, text: that.state.lastpass});\n\t\t\t\t\tthat.state.lastpass = \"\";\n\t\t\t\t} else {\n\t\t\t\t\tthat.setState({ topDropdown : \"passShow\" });\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase bit.SK_ID:\n\t\t\t\tthat.setState({ sessionId : dat.id });\n\t\t\t\tconsole.log(\"WS session id: \"+that.state.sessionId);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis.ws.onerror = function(e) { console.log(\"ERROR: \" + e.data); } \n\t\twindow.setInterval(()=>{\n\t\t\tif (window.performance.now() > bugtimer+20000)\n\t\t\t\tthat.setState({ topMessage : \"Query Engine Disconnected!\"})\n\t\t},2000);\n\t}\n\tcomponentWillMount() { document.title = 'CSV Query Tool' }\n}\n\nReactDOM.render(\n\t<Main/>, \n\tdocument.getElementById('root'));\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",["37","38"],"/home/d/gits/csvquery/webgui/src/command.js",[],"/home/d/gits/csvquery/webgui/src/utils.js",["39","40"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\nexport function validJson(str) {\n\ttry {\n\t\tJSON.parse(str);\n\t} catch (e) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n\nexport function getRequest(request){\n\tvar url = new URL(\"http://localhost:8060/info\"),\n    params = {info:request.info}\n\tObject.keys(params).forEach(key => url.searchParams.append(key, params[key]))\n\treturn fetch(url)\n\t.then(res=>{if (res.status >= 400) return {status: res.status}; else return res.json()})\n}\nexport function postRequest(request){\n\tvar req = new Request(request.path, {\n\t\tmethod: 'POST',\n\t\tmode: 'cors',\n\t\tcache: \"no-cache\",\n\t\t//credentials: \"same-origin\", // include, *same-origin, omit\n\t\tredirect: 'follow',\n\t\treferrer: \"no-referrer\",\n\t\theaders: new Headers({ \"Content-Type\": \"application/json\", }),\n\t\tbody: JSON.stringify(request.body),\n\t});\n\treturn fetch(req)\n\t.then(res=>{if (res.status >= 400) return {status: res.status}; else return res.json()})\n\t//.then(res =>res);\n\t//.then(res => {console.log(res); return res;});\n\t//.then(res=>{if (validJson(res)) return res.json(); return {err:\"not valid json\",res:res}})\n}\n\nexport function colIndex(queryResults,column){\n\tfor (var i in queryResults.colnames)\n\t\tif (queryResults.colnames[i].toUpperCase() === column.toUpperCase())\n\t\t\treturn i;\n\treturn -1;\n}\n\nexport function sortQuery(queryResults,column,way){\n\tqueryResults.vals.sort(function(a,b){\n\t\t\tvar aa = a[column];\n\t\t\tvar bb = b[column];\n\t\t\tif (queryResults.types[column] === 1 || queryResults.types[column] === 2)\n\t\t\t\treturn way*(Number(aa) > Number(bb) ? 1 : -1);\n\t\t\treturn way*(String(aa) > String(bb) ? 1 : -1);\n\t\t});\n}\n\nexport function getUnique(queryResults,column){\n\tvar uniqueList = [];\n\tvar idx = colIndex(queryResults,column);\n\tif (idx > -1)\n\t\tfor (var i in queryResults.vals)\n\t\t\tif (uniqueList.indexOf(queryResults.vals[i][idx]) < 0)\n\t\t\t\tuniqueList.push(queryResults.vals[i][idx]);\n\treturn uniqueList;\n}\n\nexport function getWhere(queryResults,column,value){\n\tif (value === \"*\") return queryResults;\n\tvar subset = JSON.parse(JSON.stringify(queryResults));\n\tvar idx = colIndex(queryResults,column);\n\tif (idx > -1){\n\t\tvar ri = queryResults.vals.length - 1;\n\t\tfor (var i in queryResults.vals){\n\t\t\tif (queryResults.vals[ri-i][idx] == null ||\n\t\t\t\tString(queryResults.vals[ri-i][idx]).toUpperCase() !== String(value).toUpperCase()){\n\t\t\t\tsubset.vals.splice(ri-i,1);\n\t\t\t\tsubset.numrows--;\n\t\t\t}\n\t\t}\n\t\treturn subset;\n\t} else return null;\n}\n\nexport function generateKeyDiagram(){\n\tconsole.log(\"ok\");\n}\nexport function max(a,b){\n\treturn a>b?a:b;\n}\n\nexport const bit = {\n\tDAT_BLANK      : 0,\n\tDAT_ERROR      : 1,\n\tDAT_GOOD       : 1 << 1,\n\tDAT_BADPATH    : 1 << 2,\n\tDAT_IOERR      : 1 << 3,\n\n\tCON_ERROR      : 1,\n\tCON_CHANGED    : 1 << 1,\n\tCON_UNCHANGED  : 1 << 2,\n\tCON_CHECKED    : 1 << 3,\n\tCON_BLANK      : 0,\n\n\tFP_CWD          : 0,\n\tFP_SERROR       : 1 << 1,\n\tFP_SCHANGED     : 1 << 2,\n\tFP_OERROR       : 1 << 3,\n\tFP_OCHANGED     : 1 << 4,\n\n\tF_CSV           : 1 << 5,\n\tF_JSON          : 1 << 6,\n\tF_OPEN          : 1 << 7,\n\tF_SAVE          : 1 << 8,\n\tF_GCSV          : 1 << 9,\n\n\tSK_MSG          : 0,\n\tSK_PING         : 1,\n\tSK_PONG         : 2,\n\tSK_STOP         : 3,\n\tSK_DIRLIST      : 4,\n\tSK_FILECLICK    : 5,\n\tSK_PASS         : 6,\n\tSK_ID           : 7,\n\n\tT_NULL          : 0,\n\tT_INT           : 1,\n\tT_FLOAT         : 2,\n\tT_DATE          : 3,\n\tT_DURATION      : 4,\n\tT_STRING        : 5,\n\tT_UNKNOWN       : 6,\n\n\n};\n\nexport const t = ['Null', 'Int', 'Float', 'Date', 'Duration', 'Text', 'Unknown', ];\n","/home/d/gits/csvquery/webgui/src/display.js",["41","42","43","44"],"import React from 'react';\nimport {getUnique,max,getWhere,sortQuery,t} from './utils.js';\n\n//drop down list for what columns to hide\nclass TableSelectColumns extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttitle: this.props.title,\n\t\t}\n\t}\n\titemInList(choice,idx,order){\n\t\tif (choice !== null)\n\t\treturn (\n\t\t\t<option className={`tableButton1${this.props.hideColumns[idx]?\" hiddenColumn\":\"\"}`} key={idx} onClick={()=>this.props.toggleColumn(idx)}>\n\t\t\t\t{choice}\n\t\t\t</option>\n\t\t)\n\t}\n\n\tSelectColumnDropdown(title, size, contents){\n\t\treturn(\n\t\t\t<div className=\"dropmenu tableModDiv\">\n\t\t\t\t<div className=\"dropButton tableModButton\">\n\t\t\t\t\t{title}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"dropmenu-content absolute-pos tableModDrop\">\n\t\t\t\t<select size={String(size)} className=\"dropSelect\">\n\t\t\t\t\t{contents}\n\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div className=\"dropmenu tableModDiv\">\n\t\t\t\t<div className=\"dropButton tableModButton\">\n\t\t\t\t\t{this.props.title}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"dropmenu-content absolute-pos tableModDrop\">\n\t\t\t\t<select size={String(Math.min(20,this.props.table.colnames.length))} className=\"dropSelect\">\n\t\t\t\t\t{this.props.table.colnames.map((name,i)=>this.itemInList(name,i))}\n\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n//drop down list for viewing rows that have a certain value\n//terrible code. rewrite it.\nclass TableSelectRows extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttitle: this.props.title,\n\t\t\tsecondDrop : false,\n\t\t\tfirstChoice : \"\",\n\t\t\tsecondDropItems : [],\n\t\t}\n\t}\n\tdropItem(choice,idx,order){\n\t\tif (choice !== null)\n\t\treturn (\n\t\t\t<option className=\"tableButton1\" key={idx} onClick={()=>{ \n\t\t\t\t\tswitch (order){\n\t\t\t\t\t\tcase 'first':\n\t\t\t\t\t\t\tthis.setState({secondDrop:true,\n\t\t\t\t\t\t\t\t\t\t   firstChoice: choice,\n\t\t\t\t\t\t\t\t\t\t   secondDropItems: getUnique(this.props.table,choice) }); \n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'second':\n\t\t\t\t\t\t\tthis.props.dropAction(this.state.firstChoice,choice);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}}>\n\t\t\t\t{choice}\n\t\t\t</option>\n\t\t)\n\t}\n\trender(){\n\t\tvar dropdowns = [\n\t\t\t\t<select className=\"dropSelect\" size={Math.min(20,this.props.firstDropItems.length)}>\n\t\t\t\t\t{this.props.firstDropItems.map((name,i)=>this.dropItem(name,i,'first'))}\n\t\t\t\t</select>\n\t\t];\n\t\tif (this.state.secondDrop)\n\t\t\tdropdowns.push(\n\t\t\t\t<select className=\"dropSelect\" size={Math.min(20,this.state.secondDropItems.length+1)}>\n\t\t\t\t\t{[\"*\"].concat(this.state.secondDropItems.sort()).map((name,i)=>this.dropItem(name,i,'second'))}\n\t\t\t\t</select>\n\t\t\t);\n\t\treturn (\n\t\t\t<div className=\"dropmenu tableModDiv\">\n\t\t\t\t<div className=\"dropButton tableModButton\">\n\t\t\t\t{this.props.title}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"dropmenu-content absolute-pos tableModDrop\">\n\t\t\t\t{dropdowns}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n//display html table with single query result\nclass TableGrid extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttableBodyId : Math.random(),\n\t\t\ttableBodyDivId : Math.random(),\n\t\t\ttableHeadId : Math.random(),\n\t\t\ttableHeadDivId : Math.random(),\n\t\t\tsortWay : 1\n\t\t}\n\t}\n\tsorter(ii){\n\t\tsortQuery(this.props.table,ii,this.state.sortWay);this.setState({sortWay:this.state.sortWay*-1});\n\t}\n\theader(){\n\t\tvar names = this.props.table.colnames.map((name,ii)=>{\n\t\t\tif (this.props.hideColumns[ii]===0) return (\n\t\t\t<th key={ii} className=\"tableCell\" onClick={()=>this.sorter(ii)}>\n\t\t\t\t{this.props.table.colnames[ii]}\n\t\t\t</th>\n\t\t)});\n\t\tvar positions = Array.from({length:this.props.table.types.length},(x,i)=>i+1);\n\t\tvar info = this.props.table.types.map((name,ii)=>{\n\t\t\tif (this.props.hideColumns[ii]===0) return (\n\t\t\t<td key={ii} className=\"tableCell typeCell\" onClick={()=>this.sorter(ii)}>\n\t\t\t\t{`${positions[ii]} `}\n\t\t\t\t<span className=\"noselect\">\n\t\t\t\t- {t[this.props.table.types[ii]]}\n\t\t\t\t</span>\n\t\t\t</td>\n\t\t)});\n\t\tinfo.push( <td id=\"scrollBuffer\">____</td> );\n\t\treturn[<tr className=\"tableRow\">{names}</tr>,<tr className=\"tableRow\" id=\"typeHeader\">{info}</tr>]\n\t}\n\trow(row,idx){\n\t\treturn( \n\t\t\t<tr key={idx} className=\"tableRow\"> \n\t\t\t\t{row.map((name,idx)=>{ \n\t\t\t\t\tif (this.props.hideColumns[idx]===0) return( <td key={idx} className=\"tableCell\"> {name} </td>) })}\n\t\t\t</tr>\n\t\t)\n\t}\n\trender(){\n\t\tif (this.props.table.vals === null)\n\t\t\tthis.props.table.vals = [];\n\t\treturn(\n\t\t<>\n\t\t\t<div className=\"tableDiv tableHeadDiv\" id={this.state.tableHeadDivId}> \n\t\t\t<table className=\"tableHead\">\n\t\t\t\t<thead id={this.state.tableHeadId}>\n\t\t\t\t{this.header()}\n\t\t\t\t</thead>\n\t\t\t</table>\n\t\t\t</div>\n\t\t\t<div className=\"tableDiv tableBodyDiv\" id={this.state.tableBodyDivId}> \n\t\t\t<table className=\"tableBody\" id={this.state.tableBodyId}>\n\t\t\t\t<tbody>\n\t\t\t\t{this.props.table.vals.map((row,i)=>{return this.row(row,i)})}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t</div>\n\t\t</>\n\t\t)\n\t}\n\tresize(){\n\t\tvar tableBodyDom\t= document.getElementById(this.state.tableBodyId);\n\t\tvar tableBodyDivDom = document.getElementById(this.state.tableBodyDivId);\n\t\tvar tableHeadDom\t= document.getElementById(this.state.tableHeadId);\n\t\tvar tableHeadDivDom = document.getElementById(this.state.tableHeadDivId);\n\t\tvar windoww = window.innerWidth;\n\n\t\t//get header table and body table cells to line up\n\t\tvar tbody = tableBodyDom.childNodes[0];\n\t\tif (tbody.childNodes.length > 0 && tbody.childNodes[0].childNodes.length > 0){\n\t\t\tvar trow = tbody.childNodes[0].childNodes;\n\t\t\tvar bcell, hcell;\n\t\t\tvar newWidth;\n\t\t\tfor (var i in trow){\n\t\t\t\tbcell = trow[i];\n\t\t\t\thcell = tableHeadDom.childNodes[0].childNodes[i];\n\t\t\t\tif (bcell.offsetWidth && hcell.offsetWidth){\n\t\t\t\t\tbcell.style.minWidth = hcell.style.minWidth = `0px`;\n\t\t\t\t\tnewWidth = max(bcell.offsetWidth, hcell.offsetWidth);\n\t\t\t\t\t\tbcell.style.minWidth = hcell.style.minWidth = `${newWidth+1}px`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//give header table and body the right size\n\t\ttableHeadDivDom.style.margin = 'auto';\n\t\ttableHeadDivDom.style.maxWidth =  tableBodyDivDom.style.maxWidth = `${Math.min(tableBodyDom.offsetWidth+15,windoww*1.00)}px`;\n\t\tif (tableBodyDom.offsetHeight <= tableBodyDivDom.offsetHeight)\n\t\t\ttableHeadDivDom.style.maxWidth =  tableBodyDivDom.style.maxWidth = `${Math.min(tableBodyDom.offsetWidth,windoww*1.00)}px`;\n\t\t//make head and body scroll together\n\t\ttableBodyDivDom.addEventListener('scroll',function(){ tableHeadDivDom.scrollLeft = tableBodyDivDom.scrollLeft; });\n\n\t}\n\tcomponentDidUpdate(){ this.resize(); }\n\tcomponentDidMount(){ this.resize(); }\n}\n\n//query results section\nexport class QueryRender extends React.Component {\n\ttoggleColumn(column){\n\t\tthis.props.hideColumns[column] ^= 1;\n\t\tthis.forceUpdate();\n\t}\n\trender(){\n\t\treturn ( \n\t\t<div className=\"viewContainer\">\n\t\t\t<div className=\"tableModifiers\">\n\t\t\t\t<div className=\"tableQuery\"><div> {this.props.table.query} </div>\n\t\t\t\t<TableSelectRows \n\t\t\t\t\ttitle = {\"Show with column value\\u25bc\"}\n\t\t\t\t\tdropAction = {(column,value)=>{this.props.rows.col=column;this.props.rows.val=value;this.forceUpdate();}}\n\t\t\t\t\ttable = {this.props.table}\n\t\t\t\t\tfirstDropItems = {this.props.table.colnames}\n\t\t\t\t/>\n\t\t\t\t<TableSelectColumns\n\t\t\t\t\ttitle = {\"Show/Hide columns\\u25bc\"}\n\t\t\t\t\ttable = {this.props.table}\n\t\t\t\t\thideColumns = {this.props.hideColumns}\n\t\t\t\t\ttoggleColumn = {(i)=>this.toggleColumn(i)}\n\t\t\t\t/>\t\n\t\t\t\t<div className=\"dropmenu tableModDiv\">\n\t\t\t\t\t<div className=\"dropButton tableModButton\">\n\t\t\t\t\t\t<span>Rows: {this.props.table.numrows}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<TableGrid\n\t\t\t\ttable = {getWhere(this.props.table,this.props.rows.col,this.props.rows.val)}\n\t\t\t\thideColumns = {this.props.hideColumns}\n\t\t\t\ttoggleColumn = {(i)=>this.toggleColumn(i)}\n\t\t\t/>\n\t\t</div>\n\t\t)\n\t}\n}\n\n","/home/d/gits/csvquery/webgui/src/topbar.js",[],"/home/d/gits/csvquery/webgui/src/help.js",["45","46"],"/home/d/gits/csvquery/webgui/src/serviceWorker.js",[],{"ruleId":"47","severity":1,"message":"48","line":64,"column":19,"nodeType":"49","messageId":"50","endLine":64,"endColumn":47},{"ruleId":"51","severity":1,"message":"52","line":110,"column":4,"nodeType":"53","endLine":110,"endColumn":26},{"ruleId":"51","severity":1,"message":"52","line":112,"column":4,"nodeType":"53","endLine":112,"endColumn":26},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":8,"nodeType":"60","messageId":"61","endLine":1,"endColumn":13},{"ruleId":"58","severity":1,"message":"62","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":16},{"ruleId":"63","severity":1,"message":"64","line":68,"column":6,"nodeType":"65","messageId":"66","endLine":77,"endColumn":7},{"ruleId":"67","severity":1,"message":"68","line":124,"column":54,"nodeType":"69","messageId":"70","endLine":124,"endColumn":56},{"ruleId":"67","severity":1,"message":"68","line":131,"column":50,"nodeType":"69","messageId":"70","endLine":131,"endColumn":52},{"ruleId":"67","severity":1,"message":"68","line":146,"column":24,"nodeType":"69","messageId":"70","endLine":146,"endColumn":26},{"ruleId":"71","severity":1,"message":"72","line":183,"column":21,"nodeType":"73","endLine":183,"endColumn":72},{"ruleId":"71","severity":1,"message":"72","line":304,"column":76,"nodeType":"73","endLine":304,"endColumn":139},"no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation"]